cmake_minimum_required(VERSION 3.0.0)
# set(CMAKE_GENERATOR "MinGW Makefiles")
set(CMAKE_CXX_STANDARD 20)
# set(CMAKE_TOOLCHAIN_FILE "C:/Users/silic/scoop/apps/vcpkg/current/scripts/buildsystems/vcpkg.cmake")
# list(APPEND CMAKE_PREFIX_PATH "C:/Users/silic/scoop/apps/vcpkg/current/installed/x64-mingw-static")
# include("C:/Users/silic/scoop/apps/vcpkg/current/scripts/buildsystems/vcpkg.cmake")
set(VCPKG_TARGET_TRIPLET "x64-mingw-static")
project(Subtitle VERSION 0.1.0 LANGUAGES C CXX)
message("-----------SHOWING-------------")
message(${CMAKE_PREFIX_PATH})
message(${CMAKE_CXX_COMPILER})
message(${CMAKE_CXX_COMPILER_ID})
message(${CMAKE_C_COMPILER})
message(${CMAKE_C_COMPILER_ID})
message(${CMAKE_GENERATOR})
# message(${CMAKE_CXX_STANDARD})
message("-----------ENDING--------------")

# set(CMAKE_MODULE_PATH "C:/Users/silic/scoop/apps/vcpkg/current/installed/x64-mingw-static")

include(CTest)
enable_testing()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
add_executable(subtitle subtitle.cpp)
add_executable(main main.cpp)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)

# find_package(httplib CONFIG REQUIRED)
find_package(cpr CONFIG REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)
find_package(unofficial-sqlite3 CONFIG REQUIRED)
find_path(CPP_BASE64_INCLUDE_DIRS "cpp-base64/base64.cpp")
find_package(cryptopp CONFIG REQUIRED)
set(nlohmann-json_IMPLICIT_CONVERSIONS OFF)
target_link_libraries(subtitle PRIVATE nlohmann_json::nlohmann_json)
target_link_libraries(subtitle PRIVATE cpr::cpr)
target_link_libraries(subtitle PRIVATE unofficial::sqlite3::sqlite3)
target_include_directories(subtitle PRIVATE ${CPP_BASE64_INCLUDE_DIRS})
target_link_libraries(subtitle PRIVATE cryptopp::cryptopp)
# target_link_libraries(main PRIVATE httplib::httplib)
target_link_libraries(main PRIVATE nlohmann_json::nlohmann_json)
